const mongoose = require("mongoose");

const orderSchema = new mongoose.Schema({
  user: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
  orderId: { type: String, required: true, unique: true },
  status: { type: String, default: "pending" },
  address: {
    name: { type: String, required: true },
    phone: { type: String, required: true },
    addressLine1: { type: String, required: true },
    addressLine2: { type: String },
    city: { type: String, required: true },
    state: { type: String, required: true },
    postalCode: { type: String, required: true },
    country: { type: String, required: true },
    isDefault: { type: Boolean, default: false },
  },
  items: [
    {
      id: { type: mongoose.Schema.Types.ObjectId, ref: 'Product', required: true },
      name: { type: String, required: true },
      price: { type: Number, required: true },
      quantity: { type: Number, required: true },
      image: { type: String },
      color: { type: String },
      size: { type: String },
      sku: { type: String },
    },
  ],
  subTotal: { type: Number, required: true },
  discount: Number,
  discountCode: { type: String, default: null },
  total: { type: Number, required: true },
  payment: {
    method: { type: String, required: true },
    paymentId: { type: String },
    orderId: { type: String },
    status: { type: String, default: 'pending' }
  },
  codCharge: {
    type: Number,
    default: 0,
  },
  shipping: {
    courier: { type: String },
    status: { type: String, default: "Pending" },
    shipmentId: { type: String },
    shiprocketOrderId: { type: String },
    awbCode: { type: String },
    courierId: { type: String },
    expectedDeliveryDate: { type: Date },
    pickupStatus: { type: String },
    manifestUrl: { type: String },
    labelUrl: { type: String },
    invoiceUrl: { type: String },
    tracking: { type: Object },
  },
  cancellationReason: { type: String },
  cancelledAt: { type: Date },
  cancellationRequested: { type: Boolean, default: false },
  cancellationRequestedAt: { type: Date },
  adminCancellationReason: { type: String },
  // Replacement fields
  replacementRequested: { type: Boolean, default: false },
  replacementRequestedAt: { type: Date },
  replacementReason: { type: String },
  replacementStatus: { type: String, enum: ['pending', 'approved', 'rejected', 'completed'], default: 'pending' },
  replacementApprovedAt: { type: Date },
  replacementRejectedAt: { type: Date },
  replacementRejectionReason: { type: String },
  replacementCompletedAt: { type: Date },
  replacementTrackingNumber: { type: String },
  replacementCourier: { type: String },
  replacementShiprocketOrderId: { type: String },
  replacementAdminNotes: { type: String },
  createdAt: { type: Date, default: Date.now },
});

module.exports = mongoose.model("Order", orderSchema);